{"version":3,"file":"index-C8M3xtWJ.js","sources":["../scripts/theme_handler.js","../scripts/index.js"],"sourcesContent":["const Theme = Object.freeze({\n  Dark: 'dark',\n  Light: 'light',\n});\n\nconst addClass = (cls) => document.body.classList.add(cls);\nconst containsClass = (cls) => document.body.classList.contains(cls);\nconst removeClass = (cls) => document.body.classList.remove(cls);\n\nfunction toggleTheme(theme) {\n  if (theme === Theme.Light) {\n    removeClass(Theme.Dark);\n    addClass(Theme.Light);\n  } else {\n    removeClass(Theme.Light);\n    addClass(Theme.Dark);\n  }\n  window.localStorage.setItem('theme', theme);\n}\n\nexport function initThemeHandler() {\n  const toggle_container = document.querySelector('.theme-toggle');\n  const toggle_button = toggle_container.querySelector('button');\n\n  function updateButtonLabel() {\n    toggle_button.textContent = containsClass(Theme.Light) ? 'dark mode' : 'light mode';\n  }\n\n  updateButtonLabel();\n\n  toggle_button.addEventListener('click', (e) => {\n    e.preventDefault();\n    if (containsClass(Theme.Light)) toggleTheme(Theme.Dark);\n    else toggleTheme(Theme.Light);\n    updateButtonLabel();\n  });\n\n  toggle_container.classList.remove('invisible');\n}\n\nexport function loadSavedTheme() {\n  const saved_theme = window.localStorage.getItem('theme');\n  if (saved_theme) toggleTheme(saved_theme);\n  // Don't want themes being inadvertently swapped if the user's browser doesn't support\n  // the `window.matchMedia` method, so explicitly check for each match.\n  else if (window.matchMedia('(prefers-color-scheme: dark)')?.matches) toggleTheme(Theme.Dark);\n  else if (window.matchMedia('(prefers-color-scheme: light)')?.matches) toggleTheme(Theme.Light);\n}\n","import { initThemeHandler, loadSavedTheme } from './theme_handler.js';\n\nloadSavedTheme();\n\n/**\n * Set up a window resize listener that adjusts the page header's\n * font size to fit the width of the page if the header is too big.\n */\nfunction initTitleResizeListener() {\n  const title = document.querySelector('.title');\n  if (!title) return;\n\n  const observer = new ResizeObserver(() => {\n    if (window.innerWidth < 768) {\n      if (title.style !== undefined) {\n        title.style.fontSize = `${title.offsetWidth * 0.75}%`;\n      }\n    } else {\n      title.style.fontSize = undefined;\n    }\n  });\n\n  observer.observe(document.body);\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  initTitleResizeListener();\n  initThemeHandler();\n});\n"],"names":["Theme","addClass","cls","containsClass","removeClass","toggleTheme","theme","initThemeHandler","toggle_container","toggle_button","updateButtonLabel","e","loadSavedTheme","saved_theme","_a","_b","initTitleResizeListener","title"],"mappings":"ssBAAA,MAAMA,EAAQ,OAAO,OAAO,CAC1B,KAAM,OACN,MAAO,OACT,CAAC,EAEKC,EAAYC,GAAQ,SAAS,KAAK,UAAU,IAAIA,CAAG,EACnDC,EAAiBD,GAAQ,SAAS,KAAK,UAAU,SAASA,CAAG,EAC7DE,EAAeF,GAAQ,SAAS,KAAK,UAAU,OAAOA,CAAG,EAE/D,SAASG,EAAYC,EAAO,CACtBA,IAAUN,EAAM,OAClBI,EAAYJ,EAAM,IAAI,EACtBC,EAASD,EAAM,KAAK,IAEpBI,EAAYJ,EAAM,KAAK,EACvBC,EAASD,EAAM,IAAI,GAErB,OAAO,aAAa,QAAQ,QAASM,CAAK,CAC5C,CAEO,SAASC,GAAmB,CACjC,MAAMC,EAAmB,SAAS,cAAc,eAAe,EACzDC,EAAgBD,EAAiB,cAAc,QAAQ,EAE7D,SAASE,GAAoB,CAC3BD,EAAc,YAAcN,EAAcH,EAAM,KAAK,EAAI,YAAc,YAC3E,CAEEU,EAAmB,EAEnBD,EAAc,iBAAiB,QAAUE,GAAM,CAC7CA,EAAE,eAAgB,EACdR,EAAcH,EAAM,KAAK,EAAGK,EAAYL,EAAM,IAAI,EACjDK,EAAYL,EAAM,KAAK,EAC5BU,EAAmB,CACvB,CAAG,EAEDF,EAAiB,UAAU,OAAO,WAAW,CAC/C,CAEO,SAASI,GAAiB,SAC/B,MAAMC,EAAc,OAAO,aAAa,QAAQ,OAAO,EACnDA,EAAaR,EAAYQ,CAAW,GAG/BC,EAAA,OAAO,WAAW,8BAA8B,IAAhD,MAAAA,EAAmD,QAAST,EAAYL,EAAM,IAAI,GAClFe,EAAA,OAAO,WAAW,+BAA+B,IAAjD,MAAAA,EAAoD,SAASV,EAAYL,EAAM,KAAK,CAC/F,CC7CAY,EAAgB,EAMhB,SAASI,GAA0B,CACjC,MAAMC,EAAQ,SAAS,cAAc,QAAQ,EAC7C,GAAI,CAACA,EAAO,OAEK,IAAI,eAAe,IAAM,CACpC,OAAO,WAAa,IAClBA,EAAM,QAAU,SAClBA,EAAM,MAAM,SAAW,GAAGA,EAAM,YAAc,GAAI,KAGpDA,EAAM,MAAM,SAAW,MAE7B,CAAG,EAEQ,QAAQ,SAAS,IAAI,CAChC,CAEA,SAAS,iBAAiB,mBAAoB,IAAM,CAClDD,EAAyB,EACzBT,EAAkB,CACpB,CAAC"}